<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE mapper
  PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
  'https://mybatis.org/dtd/mybatis-3-mapper.dtd'>
<mapper namespace='com.yedam.app.user.mapper.MemberMapper'>
	<!-- 회원 조회 -->
	<sql id="searchMemberAll">
		SELECT 	m.mem_no
				,id ,pw
				,email ,nick
				,login_path ,rpt_cnt
				,mem_grd ,name
				,zip ,addr ,deta_addr
				,mbl ,b_date
				,gen ,pnt
				,stts ,sign_date
				,prof ,grd_atch_file
				,wdr_apl_date ,blck_date
		FROM member m join member_detail d
		ON(m.mem_no=d.mem_no)
	</sql>
	<select id='selectMember' resultType='memberVO'>
		<include refid="searchMemberAll"></include>
		WHERE id= #{id}
	</select>
	<select id='selectMemberByNo' resultType='memberVO'>
		<include refid="searchMemberAll"></include>
		WHERE m.mem_no= #{memNo}
	</select>
	<select id='selectMembetDetail' resultType='MemberDetailVO'>
		SELECT * 
		FROM member_detail
		WHERE mem_no = #{memNO}
	</select>
	<!-- 아이디 중복 -->
	<select id='selectId' resultType='String'>
		SELECT id
		FROM member
		WHERE id=#{id}
	</select>
	<!-- 닉네임 중복 -->
	<select id='selectNick' resultType='String'>
		SELECT nick
		FROM member
		WHERE nick=#{nick}
	</select>
	<!-- 아이디 찾기 -->
	<select id='selectID' resultType='String'>
		SELECT SUBSTR(RPAD(SUBSTR(id,1,3),LENGTH(id),'*'),0,6)
		FROM member
		WHERE email=#{email}
	</select>
	<!-- 간편로그인시 회원가입 되어있는지 체크 -->
	<select id='selectEmail' resultType='memberVO'>
		SELECT mem_no,email
		FROM member
	</select>
	<!-- 비밀번호 찾기용 회원조회 -->
	<select id='selectPw' resultType='String' parameterType='memberVO'>
		SELECT mem_no
		FROM member
		WHERE email=#{email}
		AND id=#{id}
	</select>
	<!-- 아이디 생성 -->
	<select id='newId'>
		SELECT #{loginPath} || LPAD(login_seq.nextval,6,'0')
		FROM dual
	</select>
	<!-- 회원가입 -->
	<insert id='insertMember' parameterType='MemberVO'>
		<selectKey order='BEFORE' keyProperty='memNo'
			resultType='string'>
			SELECT 'MEM' || LPAD(mem_seq.nextval,6,'0')
			FROM dual
		</selectKey>

		INSERT INTO member (mem_no,
							id,
							pw,
							email,
							nick
							<if test='loginPath != null and !loginPath.equals("")'>
							,login_path
							</if>
							)
		VALUES (#{memNo}, 
				#{id},
				#{pw},
				#{email},
				#{nick}
				<if test='loginPath != null and !loginPath.equals("")'>
				,#{loginPath}
				</if>)
	</insert>
	<insert id='insertMemberDetail' parameterType='MemberVO'>
		INSERT INTO member_detail 	(MEM_NO
									<if test='name != null and !name.equals("")'>
									,NAME
									</if>
									<if test='zip != null and !zip.equals("")'>
									,ZIP
									</if>
									<if test='addr != null and !addr.equals("") '>
									,ADDR
									</if>
									<if test='detaAddr != null and !detaAddr.equals("")'>
									,DETA_ADDR
									</if>
									<if test='mbl != null and !mbl.equals("") '>
									,MBL
									</if>
									<if test='bDate != null'>
									,B_DATE
									</if>
									<if test='gen != null and !gen.equals("") '>
									,GEN
									</if>
									<if test='prof != null and !prof.equals("") '>
									,prof
									</if>
									)
		VALUES ( #{memNo}
				<if test='name != null and !name.equals("")'>
				 ,#{name}
				 </if>
				<if test='zip != null and !zip.equals("")'>
				 ,#{zip}
				 </if>
				<if test='addr != null and !addr.equals("") '>
				 ,#{addr}
				 </if>
				<if test='detaAddr != null and !detaAddr.equals("")'>
				 ,#{detaAddr}
				 </if>
				<if test='mbl != null and !mbl.equals("") '>
				 ,#{mbl}
				 </if>
				<if test='bDate != null'>
				 ,#{bDate}
				 </if>
				<if test='gen != null and !gen.equals("") '>
				 ,#{gen}
				 </if>
				 <if test='prof != null and !prof.equals("") '>
				 ,#{prof}
				 </if>
				 )
	</insert>
	<!-- 비밀번호 찾기 비밀번호 변경 -->
	<update id="updatePw" parameterType='memberVO'>
		UPDATE member 
		SET pw=#{pw}
		WHERE mem_no=#{memNo}
	</update>
</mapper>