<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.market.mapper.CropsSaleMapper">

	<!-- 전체조회 -->
	<select id="selectCropsSaleList" resultType="CropsSaleVO">
		select crp_sale_no, crp_title, crp_ctg, price, qty, rep, reg_date, reg_stts
		from crops_sale
		where reg_stts = 'e1'
		order by reg_date desc
	</select>
	
	<!-- 전체조회(페이징) -->
	<select id="selectCropsSaleListPage" resultType="CropsSaleVO">
		select b.*
		from (select ROWNUM rn, a.*
			  from (select c.crp_sale_no, c.crp_title, c.crp_ctg, c.price, c.qty, c.rep, to_char(c.reg_date, 'yyyy/mm/dd') regDate, c.reg_stts, r.rev_no, r.rate, r.board_no
			  		from crops_sale c left join review r
			  		on c.mem_no = r.mem_no
			  		<where>
			  			c.reg_stts = 'e1'
			  			<if test="category != null and !category.equals('') and !category.equals('전체')">
			  				and c.crp_ctg = #{category}
			  			</if>
			  			<if test="search != null and !search.equals('')">
			  				and c.crp_title like '%${search}%'
			  			</if>
			  		</where>
			  		<choose>
			  			<when test="order.equals('최신순')">
			  				order by regDate desc
			  			</when>
			  			<when test="order.equals('가격높은순')">
			  				order by c.price desc
			  			</when>
			  			<when test="order.equals('가격낮은순')">
			  				order by c.price asc
			  			</when>
			  			<when test="order.equals('리뷰순')">
			  				order by r.rate
			  			</when>
			  		</choose>
			  	   ) a
		<![CDATA[
			 where ROWNUM <= #{page} * 9) b
		where b.rn > (${page} - 1) * 9
		]]>
	</select>
	
	<!-- 단건조회 -->
	<select id="selectCropsSaleInfo" resultType="CropsSaleVO">
		select crp_sale_no, mem_no, crp_title, crp_ctg, price, qty, rep, deta_desct, reg_date, reg_stts
		from crops_sale
		where crp_sale_no = #{crpSaleNo}
	</select>
	
	<!-- 등록 -->
	<insert id="insertCropsSale" parameterType="CropsSaleVO">
		<selectKey keyProperty="crpSaleNo" resultType="String" order="BEFORE">
			select 'CRP' || LPAD(crp_seq.nextval, 6, '0')
			from dual
		</selectKey>
		insert into crops_sale(crp_sale_no, crp_title, crp_ctg, price, qty, rep, deta_desct, reg_date, reg_stts)
		values(#{crpSaleNo}, #{crpTitle}, #{crpCtg}, #{price}, #{qty}, #{rep}, #{detaDesct}, sysdate, 'e1')
	</insert>
	
	<!-- 수정 -->
	<update id="updateCropsSale" parameterType="CropsSaleVO">
		update crops_sale
		<set>
			<if test="crp_title != null and !crp_title.equals('')">
				crp_title = #{crpTitle}
			</if>
			<if test="crp_ctg != null and !crp_ctg.equals('')">
				crp_ctg = #{crpCtg}
			</if>
			<if test="price != null and !price.equals('')">
				price = #{price}
			</if>
			<if test="qty != null and !qty.equals('')">
				, qty = #{qty}
			</if>
			<if test="rep != null and !rep.equals('')">
				rep = #{rep}
			</if>
			<if test="data_desct != null and !deta_desct.equals('')">
				deta_desct = #{detaDesct}
			</if>
			<if test="reg_date == null">
				reg_date = sysdate
			</if>
		</set>
		where crp_sale_no = #{crpSaleNo}
	</update>
	
	<!-- 삭제 -->
	<update id="deleteCropsSale" parameterType="CropsSaleVO">
		update crops_sale
		set reg_stts = 'e7'
		where crp_sale_no = #{crpSaleNo}
	</update>
	
	<!-- 게시글 수 카운팅 -->
	<select id="getCount" resultType="int">
		select count(*) from crops_sale
		<where>
			reg_stts = 'e1'
			<if test="category != null and !category.equals('') and !category.equals('전체')">
				and crp_ctg = #{category}
			</if>
			<if test="search != null and !search.equals('')">
				and crp_title like '%${search}%'
			</if>
		</where>
	</select>
	
	<!-- 별점 -->
	<select id="totalRate" resultType="int">
		select count(*)
		from review r join crops_sale c
		on r.mem_no = c.mem_no
		where c.crp_sale_no = #{crpSaleNo}
	</select>
	
</mapper>